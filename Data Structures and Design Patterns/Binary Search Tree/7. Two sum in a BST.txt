class Solution{
  public:
    // root : the root Node of the given BST
    // target : the target sum
    
    void inorder(Node* root, vector<int>& inorderList) {
        
        if(root == NULL)
            return;
            
        inorder(root->left, inorderList);
        inorderList.push_back(root->data);
        inorder(root->right, inorderList);
    }
    
    int isPairPresent(struct Node *root, int target)
    {
        vector<int> inorderList;
        inorder(root, inorderList);
        
        int n = inorderList.size();
        int i = 0;
        int j = n-1;
        
        while(i < j) {
            int val = inorderList[i] + inorderList[j];
            if(val == target) {
                return 1;
            }
            else if(val < target) {
                i++;
            }
            else {
                j--;
            }
        }
        
        return 0;
    }

};