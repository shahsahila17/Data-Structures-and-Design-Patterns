class MinStack {
public:

    stack<long> s;
    int mini;

    MinStack() {
        mini = INT_MAX;
    }
    
    void push(int val) {
        if(s.empty()) {
            mini = val;
            s.push(val);
	    }
        else if(val < mini) {
            s.push((1LL*2*val - mini));
            mini = val;
        }
        else {
            s.push(val);
        }
    }
    
    void pop() {
        if(s.empty()) {
            return;
        }
        else if(s.top() < mini) {
            mini = 1LL*2*mini - s.top();
            s.pop();
        }
        else {
            s.pop();
        }
    }
    
    int top() {
        if(s.top() < mini) {
            return mini;
        }
        return s.top();
    }
    
    int getMin() {
        return mini;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */